{
  "name": "grunt-yaml",
  "description": "Compiles YAML to JSON.",
  "version": "0.4.0",
  "homepage": "https://github.com/shiwano/grunt-yaml",
  "author": {
    "name": "Shogo Iwano",
    "email": "shiwano@gmail.com",
    "url": "http://shiwano.com/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/shiwano/grunt-yaml.git"
  },
  "bugs": {
    "url": "https://github.com/shiwano/grunt-yaml/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/shiwano/grunt-yaml/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.2",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "js-yaml": "~3.0.1",
    "lodash": "~2.4.1"
  },
  "readme": "# grunt-yaml [![Build Status](https://secure.travis-ci.org/shiwano/grunt-yaml.png?branch=master)](http://travis-ci.org/shiwano/grunt-yaml)\n\n> Compiles YAML to JSON.\n\n## Getting Started\n_If you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide._\n\nFrom the same directory as your project's [Gruntfile][Getting Started] and [package.json][], install this plugin with the following command:\n\n```bash\nnpm install grunt-yaml --save-dev\n```\n\nOnce that's done, add this line to your project's Gruntfile:\n\n```js\ngrunt.loadNpmTasks('grunt-yaml');\n```\n\nIf the plugin has been installed correctly, running `grunt --help` at the command line should list the newly-installed plugin's task or tasks. In addition, the plugin should be listed in package.json as a `devDependency`, which ensures that it will be installed whenever the `npm install` command is run.\n\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/blob/devel/docs/getting_started.md\n[package.json]: https://npmjs.org/doc/json.html\n\n## The \"yaml\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `yaml` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  yaml: {\n    your_target: {\n      options: {\n        ignored: /^_/,\n        space: 4,\n        customTypes: {\n          '!include scalar': function(value, yamlLoader) {\n            return yamlLoader(value);\n          },\n          '!max sequence': function(values) {\n            return Math.max.apply(null, values);\n          },\n          '!extend mapping': function(value, yamlLoader) {\n            return _.extend(yamlLoader(value.basePath), value.partial);\n          }\n        }\n      },\n      files: [\n        {expand: true, cwd: 'yaml_directory/', src: ['**/*.yml'], dest: 'output_directory/'}\n      ]\n    },\n  },\n})\n```\nIn a situation where you do not want to output a file, but want to manipulate the data on your own, you can provide a middleware function and disable the destination write process:\n\n```js\ngrunt.initConfig({\n  yaml: {\n    your_target: {\n      options: {\n        disableDest: true,    // Grunt will not create a config.json as per the destination of the files object\n        middleware: function(response, json, src, dest){\n          console.log(response);    // YAML data\n          console.log(json);        // Stringified JSON\n          console.log(src);         // Source file path\n          console.log(dest);        // Destination file path\n        },\n        space: 4\n      },\n      files: {\n        'config.json': ['config.yml']\n      }\n    },\n  },\n})\n```\n\n### Options\n\n#### options.ignored\nType: `RegExp` or `String`\nDefault value: `null`\n\nA value that specifies file pattern not to compile.\n\n#### options.space\nType: `Number`\nDefault value: `2`\n\nA value that is given to `JSON.stringify` for pretty-printing.\n\n#### options.customTypes\nType: `Object`\nDefault value: `{}`\n\nA Object that defines custom types to [js-yaml](https://github.com/nodeca/js-yaml). A Object key is a `tag` and `loadKind` pair which is separated with a white space (e.g. `!include scalar` or `!max sequence`, `!extend mapping`). A Object value is a wrapper of loadResolver function which take `value` and `yamlLoader` arguments.\n\nSee also js-yaml [document](https://github.com/nodeca/js-yaml/wiki/Custom-types).\n\n#### options.middleware\nType: `Function`\nDefault value: `function(response, json, src, dest) {}`\n\nA function which provides you an interface to manipulate the YAML before it becomes JSON, or manipulate the JSON after being stringified.\n\n#### options.disableDest\nType: `Boolean`\nDefault value: `false`\n\nA boolean flag which will prevent grunt-yaml from creating an output file if you would like to just work with the middleware function.\n\n#### options.strict\nType: `Boolean`\nDefault value: `false`\n\nA boolean flag which makes js-yaml to throw errors instead of warnings.\n\n### Usage Examples\n\nSee [my repository](https://github.com/shiwano/cw-schema).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [grunt][].\n\n## Release History\n * 2014-01-23   v0.4.0   Change yamlLoader behavior for showing the file name on js-yaml error, and add `strict` option.\n * 2014-01-18   v0.3.1   Use grunt.warn on js-yaml error.\n * 2014-01-17   v0.3.0   Introduce `customTypes` option for js-yaml v0.3.X. (Remove `constructors` option)\n * 2014-01-17   v0.2.2   Add src and dest path to middleware.\n * 2013-06-26   v0.2.1   Add `middleware` and `disableDest` options.\n * 2013-05-10   v0.2.0   Use `files` format.\n * 2013-04-14   v0.1.2   Support for grunt 0.4.0.\n * 2013-02-09   v0.1.1   Support for grunt 0.4.0rc7.\n * 2012-12-22   v0.1.0   First release.\n\n## License\nCopyright (c) 2012 Shogo Iwano\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-yaml@0.4.0",
  "dist": {
    "shasum": "8b05e9cb00ddf183a8ec400ab7360b267de210cd"
  },
  "_from": "grunt-yaml@",
  "_resolved": "https://registry.npmjs.org/grunt-yaml/-/grunt-yaml-0.4.0.tgz"
}
